Перем Обмен;
Перем ВыборИзСписка;
Перем РаботаСОкнами;

Процедура ДобавитьДляВыбора(Соответствие, Ключ, Значение = "")
	
	Значение = ?(Значение = "", Ключ, Значение);
	Соответствие.Вставить(Ключ, Значение);
	
КонецПроцедуры

Процедура УстановитьКонфигурациюПоУмолчанию()

	ОписанияКонфигураций = НайтиФайлы("configs", "*.txt", Истина);
	
	Данные = Новый Соответствие;
	Для Каждого Стр Из ОписанияКонфигураций Цикл
		Данные.Вставить(Стр.Имя, Стр.Имя);
	КонецЦикла;
	
	Результат = ВыборИзСписка.ВыбратьИзСписка(Данные);
	Обмен.ЗаписатьРезультатВФайл("configs/default.txt", Результат);
	
КонецПроцедуры

Процедура ВывестиМассивРеквизитов(Результат, МассивРеквизитов, Начало, Префикс)
	
	Для А = Начало По МассивРеквизитов.Количество() - 1 Цикл
		Стр = МассивРеквизитов[А];
		Если Стр <> "" Тогда
			Результат  = Результат  + Префикс + "." + Стр + " = Неопределено;" + Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

Процедура ГенерироватьКодСоздания(ВариантГенерации)
	
	ИмяФайлаОписанияКонфигурации = Обмен.ПолучитьТекстИзФайла("configs/default.txt");
	ОписаниеКонфигурации = Обмен.ПолучитьТекстИзФайла("configs/" + ИмяФайлаОписанияКонфигурации);
	
	Данные = СтрРазделить(ОписаниеКонфигурации, Символы.ПС, Истина);
	
	СтрОбъектыМетаданных = Данные[0];
	
	СписокВыбора = Новый Соответствие;
	
	ОбъектыМетаданных = СтрРазделить(СтрОбъектыМетаданных, ",", Истина);
	А = 0;
	Для Каждого Стр Из ОбъектыМетаданных Цикл
		А = А + 1;
		ДобавитьДляВыбора(СписокВыбора, А, Стр);
	КонецЦикла;
	
	Результат = ВыборИзСписка.ВыбратьИзСписка(СписокВыбора);
	
	ДанныеМД = Данные[Результат];
	
	Если ДанныеМД = "" Тогда
		Возврат;
	КонецЕсли;
	
	ВариантыИмени = Новый Соответствие;
	ДобавитьДляВыбора(ВариантыИмени, "док");
	ДобавитьДляВыбора(ВариантыИмени, "спр");
	ДобавитьДляВыбора(ВариантыИмени, "запись");
	ИмяПеременной = ВыборИзСписка.ВыбратьИзСписка(ВариантыИмени);

	РаботаСОкнами.АктивироватьЗапомненноеОкно();
	
	СтруктураМД = СтрРазделить(ДанныеМД, "|", Истина);
	ТипВидМД = СтрРазделить(СтруктураМД[0], ".", Истина);
	
	ТипМД = ТипВидМД[0];
	ВидМД = ТипВидМД[1];
	Результат = "";
	
	Если (ТипМД = "Документ") ИЛИ (ТипМД = "Справочник") Тогда

		Если (ТипМД = "Документ") Тогда
			Результат = ИмяПеременной + " = Документы." + ВидМД + ".СоздатьДокумент();" + Символы.ПС;
		Иначе
			Результат = ИмяПеременной + " = Справочники." + ВидМД + ".СоздатьЭлемент();" + Символы.ПС;
		КонецЕсли;
		
		ВывестиМассивРеквизитов(Результат, СтрРазделить(СтруктураМД[1], ",", Истина), 0, ИмяПеременной);
		
		Если ВариантГенерации = "Шапка" Тогда
			Обмен.УстановитьТекстВВыделение(Результат);
			Возврат;
		ИначеЕсли ВариантГенерации = "Табличная часть" Тогда
			Результат = "";
			
			СписокТЧ = Новый Соответствие;
			Для А = 2 По СтруктураМД.Количество() - 1 Цикл
				Стр = СтруктураМД[А];
				ДобавитьДляВыбора(СписокТЧ, СтрРазделить(Стр, ",", Истина)[0]);
			КонецЦикла;
			
			ИмяВыбраннойТЧ = ВыборИзСписка.ВыбратьИзСписка(СписокТЧ);
			
			// генерируем код по ТЧ
			Для А = 2 По СтруктураМД.Количество() - 1 Цикл
				Стр = СтруктураМД[А];
				СтрМассив = СтрРазделить(Стр, ",", Истина);
				Если СтрМассив[0] = ИмяВыбраннойТЧ Тогда
					Результат  = Результат  + "СтрокаТЧ = " + ИмяПеременной + "." + ИмяВыбраннойТЧ + ".Добавить();" + Символы.ПС;
					ВывестиМассивРеквизитов(Результат, СтрМассив, 0, "СтрокаТЧ");
					Результат  = Результат  + Символы.ПС;
				КонецЕсли;
				
			КонецЦикла;
			
			Обмен.УстановитьТекстВВыделение(Результат);
			Возврат;
		Иначе
			Возврат;	
		КонецЕсли;
		
		// генерируем код по ТЧ
		Результат = Результат + Символы.ПС;
		Для А = 2 По СтруктураМД.Количество() - 1 Цикл
			
			Стр = СтруктураМД[А];
			СтрМассив = СтрРазделить(Стр, ",", Истина);
			
			Результат  = Результат  + "СтрокаТЧ = " + ИмяПеременной + "." + СтрМассив[0] + ".Добавить();" + Символы.ПС;
			ВывестиМассивРеквизитов(Результат, СтрМассив, 0, "СтрокаТЧ");
			Результат  = Результат  + Символы.ПС;
			
		КонецЦикла;

		Обмен.УстановитьТекстВВыделение(Результат);
		
	Иначе
		Результат  = Результат  +  ИмяПеременной + " = Движения." + ВидМД + ".Добавить();" + Символы.ПС;

		// Стандартные реквизиты
		Результат = Результат + Символы.ПС;
		Результат = Результат  +  "// Стандартные реквизиты" + Символы.ПС;
		Результат = Результат + Символы.ПС;
		ВывестиМассивРеквизитов(Результат, СтрРазделить(СтруктураМД[1], ",", Истина), 0, ИмяПеременной);

		// Получаем измерения
		Результат = Результат + Символы.ПС + "// Измерения" + Символы.ПС;
		ВывестиМассивРеквизитов(Результат, СтрРазделить(СтруктураМД[2], ",", Истина), 0, ИмяПеременной);

		// Получаем ресурсы
		Результат = Результат + Символы.ПС + "// Ресурсы" + Символы.ПС;
		ВывестиМассивРеквизитов(Результат, СтрРазделить(СтруктураМД[3], ",", Истина), 0, ИмяПеременной);

		// Получаем реквизиты
		Результат = Результат + Символы.ПС + "// Реквизиты" + Символы.ПС;
		ВывестиМассивРеквизитов(Результат, СтрРазделить(СтруктураМД[4], ",", Истина), 0, ИмяПеременной);

		Обмен.УстановитьТекстВВыделение(Результат);
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ГенерацияКодаПоМетаданным()
	
	РаботаСОкнами = Новый РаботаСОкнами();
	РаботаСОкнами.ЗапомнитьТекущееОкно();

	Данные = Новый Соответствие;
	Данные.Вставить("Объект метаданных", "Объект метаданных");
	Данные.Вставить("Табличная часть", "Табличная часть");
	Данные.Вставить("Шапка", "Шапка");
	Данные.Вставить("Конфигурация по умолчанию", "Конфигурация по умолчанию");
	
	Результат = ВыборИзСписка.ВыбратьИзСписка(Данные);
	
	Если Результат = "Конфигурация по умолчанию" Тогда
		УстановитьКонфигурациюПоУмолчанию();
	Иначе
		ГенерироватьКодСоздания(Результат);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриСозданииОбъекта()
	
	Обмен = ЗагрузитьСценарий("core/Обмен.os");
	ВыборИзСписка = ЗагрузитьСценарий("core/SelectValue.os");
	
	Если АргументыКоманднойСтроки.Количество() > 0 Тогда
		
		Параметры = Обмен.РазобратьПараметры(АргументыКоманднойСтроки);
		
		Если Параметры.Действие = "ГенерацияКодаПоМетаданным" Тогда
			ГенерацияКодаПоМетаданным();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
#Использовать logos

Перем Лог;
Перем Обмен;

Функция ПолучитьНомерСтроки(Стр)
	Позиция = СтрНайти(Стр,")");
	Если Позиция = 0 Тогда
		Возврат 0;
	Иначе
		Возврат Сред(Стр,2,Позиция-2);
	КонецЕсли;
КонецФункции // ПолучитьНомерСтроки()

Функция ПолучитьСтрокиПоРегВыражению(Данные, СтрокаПоиска, РежимЗаполнения=0)
	РегВыражение = Новый РегулярноеВыражение(СтрокаПоиска);
	РегВыражение.ИгнорироватьРегистр = Истина;
	
	СтрокиМодуля = СтрРазделить(Данные, Символы.ПС, Истина);

	СписМетодов = "";

	А = 0;
	Для каждого Стр Из СтрокиМодуля Цикл
		А = А + 1;
		Совпадения = РегВыражение.НайтиСовпадения(Стр);
		Если Совпадения.Количество() > 0 Тогда
			Если РежимЗаполнения = "Поиск" Тогда
				СтрМетода = "(" + А + ") " + Стр;
				СписМетодов = СписМетодов + Символы.ПС + СтрМетода ;
			Иначе
				Для каждого Сп Из Совпадения Цикл
					СпГр = Сп.Группы;
					СтрМетода = "(" + А + ") [" + Лев(СпГр[0].Значение,1) + "] " + СпГр[2].Значение;
					СписМетодов = СписМетодов + Символы.ПС + СтрМетода ;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если РежимЗаполнения = "Поиск" Тогда
		Обмен.ЗаписатьРезультатВФайл("tmp\last-search.txt", СокрЛП(СписМетодов));
	КонецЕсли;
	СтрМетода = Обмен.ВыбратьИзСписка(СокрЛП(СписМетодов),"tmp\last-select.txt");
	Возврат СтрМетода;
КонецФункции // ПолучитьСтрокиПоРегВыражению(Данные,СтрокаПоиска)

Процедура СписокМетодов(Данные)
	Стр = ПолучитьСтрокиПоРегВыражению(Данные,"^\s*(процедура|функция|procedure|function)\s+(.*)\(");
	НомСтр = ПолучитьНомерСтроки(Стр);
	ЗавершитьРаботу(НомСтр);
КонецПроцедуры

Процедура СписокОбластей(Данные)
	Стр = ПолучитьСтрокиПоРегВыражению(Данные,"^\s*(\#Область|\#region)\s+(.*)");
	НомСтр = ПолучитьНомерСтроки(Стр);
	ЗавершитьРаботу(НомСтр);
	
КонецПроцедуры

Процедура ПоискРегулярныеВыражения(Данные)
	
	ДанныеВыбора = ""
	+ "^/?([^/]/?)*ВыражениеТолькоНеКомментариях" + Символы.ПС
	+ "//+.*ВыражениеТолькоВКомментариях" + Символы.ПС
	+ "//+.*TODO" + Символы.ПС
	+ "//+.*FIXME" + Символы.ПС
	+ "//+.*BUG";
	
	СтрВыбора = Обмен.ВыбратьИзСписка(ДанныеВыбора);
	Если СтрВыбора <> "" Тогда
		
		Стр = ПолучитьСтрокиПоРегВыражению(Данные,СтрВыбора,"Поиск");	
		НомСтр = ПолучитьНомерСтроки(Стр);
		ЗавершитьРаботу(НомСтр);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РезультатПоследнегоПоиска()

	ДанныеВыбора = Обмен.ПолучитьТекстИзФайла("tmp\last-search.txt");
	Стр = Обмен.ВыбратьИзСписка(ДанныеВыбора);
	НомСтр = ПолучитьНомерСтроки(Стр);
	ЗавершитьРаботу(НомСтр);
	
КонецПроцедуры

Процедура ПоказатьПоследнийСписокВыбора()

	ДанныеВыбора = Обмен.ПолучитьТекстИзФайла("tmp\last-select.txt");
	Стр = Обмен.ВыбратьИзСписка(ДанныеВыбора);
	НомСтр = ПолучитьНомерСтроки(Стр);
	ЗавершитьРаботу(НомСтр);
	
КонецПроцедуры

Процедура ПерейтиВНачалоМетода(Данные)
	
	РегВыражение = Новый РегулярноеВыражение("^\s*(процедура|функция|procedure|function)\s+");
	РегВыражение.ИгнорироватьРегистр = Истина;

	СтрокиМодуля = СтрРазделить(Данные, Символы.ПС, Истина);
	КолСтрок = СтрокиМодуля.Количество()-1;
	Для А = -КолСтрок по 0 Цикл
		Стр = СтрокиМодуля.Получить(-А);
		Если РегВыражение.Совпадает(Стр) = Истина Тогда
			Лог.Отладка("НомСтр: " + А + ". " + Стр);
			ЗавершитьРаботу(-А+1);
		КонецЕсли;
	КонецЦикла;
	ЗавершитьРаботу(0);
	
КонецПроцедуры

Функция ИмяМетода(Данные) Экспорт
	
	РегВыражение = Новый РегулярноеВыражение("^\s*(процедура|функция|procedure|function)\s+(.*)\(");
	РегВыражение.ИгнорироватьРегистр = Истина;

	СтрокиМодуля = СтрРазделить(Данные, Символы.ПС, Истина);
	КолСтрок = СтрокиМодуля.Количество()-1;
	Для А = -КолСтрок по 0 Цикл
		Стр = СтрокиМодуля.Получить(-А);
		Совпадения = РегВыражение.НайтиСовпадения(Стр);
		Если Совпадения.Количество() > 0 Тогда
			Для каждого Сп Из Совпадения Цикл
				СпГр = Сп.Группы;
				Возврат СокрЛП(СпГр[2].Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

Процедура ПоказатьИмяМетода(Данные)
	ИмяМетода = ИмяМетода(Данные);
	Обмен.ВвестиЗначение(ИмяМетода);
КонецПроцедуры

Процедура Выполнить(Параметры)
	
    Лог = Логирование.ПолучитьЛог("v8cfgahkadds.module.module.navigation");
    Лог.УстановитьУровень(УровниЛога.Отладка);

    ФайлЖурнала = Новый ВыводЛогаВФайл;
    ФайлЖурнала.ОткрытьФайл("tmp\debug.log");
    Лог.ДобавитьСпособВывода(ФайлЖурнала);
    // Лог.Отладка("Это строка лога");

	Если Параметры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Обмен = ЗагрузитьСценарий("scripts\Обмен.os");
	Данные = Обмен.ПолучитьТекстИзФайла("tmp\module.txt");
	
	Если Параметры[0] = "НачалоМетода" Тогда
		ПерейтиВНачалоМетода(Данные);
	ИначеЕсли Параметры[0] = "СписокМетодов" Тогда
		СписокМетодов(Данные);
	ИначеЕсли Параметры[0] = "СписокОбластей" Тогда
		СписокОбластей(Данные);
	ИначеЕсли Параметры[0] = "RegExSearch" Тогда
		ПоискРегулярныеВыражения(Данные);
	ИначеЕсли Параметры[0] = "РезультатПоследнегоПоиска" Тогда
		РезультатПоследнегоПоиска();
	ИначеЕсли Параметры[0] = "ПоказатьПоследнийСписокВыбора" Тогда
		ПоказатьПоследнийСписокВыбора();
	ИначеЕсли Параметры[0] = "ИмяМетода" Тогда
		ПоказатьИмяМетода(Данные);
	КонецЕсли;
	
 	Лог.Закрыть(); // при включении логирования в файл рекомендуется закрывать лог.

КонецПроцедуры


Выполнить(АргументыКоманднойСтроки);
